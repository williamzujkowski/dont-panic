---
import '../styles/global.css';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { navItems } from '../data/navItems';

interface Props {
    title: string;
    description?: string;
}

const { title, description = "Don't Panic - Vulnerability Intelligence Reports" } = Astro.props;
const pageTitle = `${title} | Don't Panic`;
const base = Astro.config?.base ?? '/';
const site = Astro.site ?? new URL('http://localhost:4321');
const canonicalURL = new URL(Astro.url.pathname, site);
const faviconUrl = `${base}favicon.svg`;
const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
        <base href={base} />
        <link rel="icon" type="image/svg+xml" href={faviconUrl} />
        <meta name="generator" content={Astro.generator} />
        <meta name="theme-color" content="#2271b3" />
        <meta name="color-scheme" content="light dark" />
        
        <!-- Preload key assets -->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        
        <!-- PWA capabilities -->
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <title>{pageTitle}</title>
        
        <script is:inline>
            // Improved theme initialization script
            (function() {
                try {
                    const savedTheme = localStorage.getItem("theme");
                    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
                    
                    // Set initial theme: saved preference or system preference
                    if (savedTheme === "dark" || (!savedTheme && prefersDark)) {
                        document.documentElement.classList.add("dark");
                    } else {
                        document.documentElement.classList.remove("dark");
                    }
                    
                    // Set up theme toggle button display
                    const themeToggleBtn = document.getElementById("themeToggleBtn");
                    if (themeToggleBtn) {
                        const updateThemeDisplay = (isDark) => {
                            const darkIcon = themeToggleBtn.querySelector(".dark-icon");
                            const lightIcon = themeToggleBtn.querySelector(".light-icon");
                            
                            if (isDark) {
                                darkIcon.style.display = "block";
                                lightIcon.style.display = "none";
                                themeToggleBtn.setAttribute('aria-label', 'Currently in dark mode. Switch to light mode');
                                themeToggleBtn.setAttribute('title', 'Switch to light mode');
                                themeToggleBtn.setAttribute('aria-pressed', 'true');
                            } else {
                                darkIcon.style.display = "none";
                                lightIcon.style.display = "block";
                                themeToggleBtn.setAttribute('aria-label', 'Currently in light mode. Switch to dark mode');
                                themeToggleBtn.setAttribute('title', 'Switch to dark mode');
                                themeToggleBtn.setAttribute('aria-pressed', 'false');
                            }
                        };
                        
                        updateThemeDisplay(document.documentElement.classList.contains("dark"));
                    }
                    
                    // Add class to enable transitions (but only after initial theme is set)
                    setTimeout(() => {
                        document.documentElement.classList.add('theme-transitions-enabled');
                    }, 100);
                    
                    // Listen for system preference changes
                    window.matchMedia("(prefers-color-scheme: dark)").addEventListener('change', (e) => {
                        // Only update if user hasn't set a preference
                        if (!localStorage.getItem("theme")) {
                            if (e.matches) {
                                document.documentElement.classList.add("dark");
                            } else {
                                document.documentElement.classList.remove("dark");
                            }
                            
                            // Update button appearance if it exists
                            if (themeToggleBtn) {
                                updateThemeDisplay(e.matches);
                            }
                        }
                    });
                } catch (e) {
                    console.error("Theme initialization error:", e);
                }
            })();
        </script>

        <link rel="canonical" href={canonicalURL.href} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content={canonicalURL.href} />
        <meta property="og:title" content={pageTitle} />
        <meta property="og:description" content={description} />
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={canonicalURL.href} />
        <meta property="twitter:title" content={pageTitle} />
        <meta property="twitter:description" content={description} />
    </head>
    <body class="min-h-screen flex flex-col bg-background">
        <!-- Skip to content link - enhanced with better focus styles for keyboard users -->
        <a href="#main-content" class="skip-to-content focus:outline-none focus:ring-2 focus:ring-primary">Skip to content</a>

        <Header siteTitle="Don't Panic" navItems={navItems} currentPath={currentPath} />

        <main id="main-content" class="flex-1" tabindex="-1" aria-label="Main content">
            <slot />
        </main>

        <Footer />
        
        <script is:inline type="module">
            document.addEventListener("DOMContentLoaded", () => {
                const btn = document.getElementById("themeToggleBtn");
                if (!btn) return;
                const html = document.documentElement;
                
                btn.addEventListener("click", () => {
                    const isDarkMode = html.classList.contains("dark");
                    
                    // Add transition effect to the theme change
                    const transition = document.createElement('div');
                    transition.className = 'theme-transition';
                    document.body.appendChild(transition);
                    
                    // Toggle theme after a small delay for the animation
                    setTimeout(() => {
                        if (isDarkMode) {
                            html.classList.remove("dark");
                            localStorage.setItem("theme", "light");
                        } else {
                            html.classList.add("dark");
                            localStorage.setItem("theme", "dark");
                        }
                        
                        // Update icons visibility
                        const darkIcon = btn.querySelector(".dark-icon");
                        const lightIcon = btn.querySelector(".light-icon");
                        const newIsDarkMode = html.classList.contains("dark");
                        
                        if (newIsDarkMode) {
                            darkIcon.style.display = "block";
                            lightIcon.style.display = "none";
                            btn.setAttribute('aria-label', 'Currently in dark mode. Switch to light mode');
                            btn.setAttribute('title', 'Switch to light mode');
                            btn.setAttribute('aria-pressed', 'true');
                            btn.classList.add('theme-toggle-dark');
                        } else {
                            darkIcon.style.display = "none";
                            lightIcon.style.display = "block";
                            btn.setAttribute('aria-label', 'Currently in light mode. Switch to dark mode');
                            btn.setAttribute('title', 'Switch to dark mode');
                            btn.setAttribute('aria-pressed', 'false');
                            btn.classList.remove('theme-toggle-dark');
                        }
                        
                        // Dispatch theme change event for other components
                        document.dispatchEvent(new CustomEvent('themeChanged', {
                            detail: { isDark: newIsDarkMode }
                        }));
                        
                        // Remove the transition element
                        setTimeout(() => {
                            transition.style.opacity = '0';
                            setTimeout(() => transition.remove(), 300);
                        }, 100);
                    }, 50);
                });
            });
        </script>
        
        <style is:inline>
            /* Theme transition effect - gentler for accessibility */
            .theme-transition {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.15); /* Reduced opacity for better visibility */
                z-index: 9999;
                pointer-events: none;
                opacity: 0.3; /* Reduced opacity */
                transition: opacity 0.2s ease; /* Faster transition */
                backdrop-filter: blur(2px); /* Reduced blur */
            }
            
            /* Disable transition effect for users who prefer reduced motion or if prefers-reduced-transparency is supported */
            @media (prefers-reduced-motion: reduce), (prefers-reduced-transparency: reduce) {
                .theme-transition {
                    background-color: transparent;
                    backdrop-filter: none;
                    opacity: 0;
                }
            }
            
            /* Theme toggle button animations */
            #themeToggleBtn .dark-icon,
            #themeToggleBtn .light-icon {
                transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1);
            }
            
            #themeToggleBtn:hover .dark-icon,
            #themeToggleBtn:hover .light-icon {
                transform: rotate(12deg) scale(1.1);
            }
            
            #themeToggleBtn:active .dark-icon,
            #themeToggleBtn:active .light-icon {
                transform: scale(0.9);
                transition-duration: 0.1s;
            }
            
            /* Light/dark mode specific styles */
            .dark-icon {
                display: none;
                color: #FFD700; /* Gold color for the sun icon */
            }
            
            .light-icon {
                display: block;
                color: #6B7280; /* Gray color for the moon icon */
            }
            
            .theme-toggle-dark {
                background-color: rgba(255, 255, 255, 0.1) !important;
                box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
            }
            
            /* Improve page transitions */
            @media (prefers-reduced-motion: no-preference) {
                main {
                    animation: fadeIn 0.3s ease-out;
                }
                
                @keyframes fadeIn {
                    from { opacity: 0; transform: translateY(6px); }
                    to { opacity: 1; transform: translateY(0); }
                }
            }
        </style>
    </body>
</html>