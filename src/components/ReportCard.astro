---
// src/components/ReportCard.astro
import type { CollectionEntry } from 'astro:content';

interface Props {
	report: CollectionEntry<'reports'>;
}

const { report } = Astro.props;
// Safely access config property with fallback
const base = Astro.config?.base ?? '/';
const reportUrl = `${base}reports/${report.slug}/`;
---
<a href={reportUrl} class="block p-6 bg-surface rounded-md border border-border hover:shadow-sm hover:border-primary transition-all duration-200 ease-in-out group">
	<h3 class="text-lg font-semibold mb-2 text-primary group-hover:text-primary-dark">{report.data.title}</h3>
	<p class="text-sm text-text-muted mb-3">
		Published: <time datetime={report.data.publishDate.toISOString()}> {/* Use publishDate */}
			{report.data.publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })} {/* Use publishDate */}
		</time>
	</p>
	{report.data.description && (
		<p class="text-sm text-text-secondary mb-3 line-clamp-2">{report.data.description}</p>
	)}
	<div class="flex flex-wrap gap-2 text-xs mb-3">
		{report.data.cvssScore && ( /* Use cvssScore */
			<span class="inline-block bg-red-100 text-red-800 rounded px-2 py-0.5">
				CVSS: {report.data.cvssScore.toFixed(1)} {/* Use cvssScore */}
			</span>
		)}
		{report.data.epssScore && ( /* Use epssScore */
			<span class="inline-block bg-yellow-100 text-yellow-800 rounded px-2 py-0.5">
				EPSS: {(report.data.epssScore * 100).toFixed(1)}% {/* Use epssScore */}
			</span>
		)}
	</div>
	{report.data.tags && report.data.tags.length > 0 && (
		<div class="text-xs">
			{report.data.tags.map(tag => (
				<span class="inline-block bg-secondary/10 text-secondary rounded px-2 py-0.5 mr-1 mb-1">
					#{tag}
				</span>
			))}
		</div>
	)}
</a>
