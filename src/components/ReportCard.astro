---
// src/components/ReportCard.astro
import type { CollectionEntry } from 'astro:content';
import SeverityTag from './SeverityTag.astro';
import ZeroDayTag from './ZeroDayTag.astro';
import ScoreDisplay from './ScoreDisplay.astro';

interface Props {
	report: CollectionEntry<'reports'>;
}

const { report } = Astro.props;
// Safely access config property with fallback
const base = Astro.config?.base ?? '/';
const reportUrl = `${base}reports/${report.slug}/`;
---
<a href={reportUrl} class="flex flex-col h-full p-4 bg-surface rounded-md border border-border hover:shadow-md hover:border-primary transition-all duration-200 ease-in-out group"> {/* Use flex-col and h-full */}
	{/* CVE ID */}
	<h3 class="text-base font-semibold mb-1 text-primary group-hover:text-primary-dark">{report.data.cveId}</h3> {/* Slightly smaller CVE ID */}
	{/* Title (smaller) */}
	<p class="text-sm text-text-secondary mb-2 line-clamp-2 flex-grow">{report.data.title}</p> {/* Added flex-grow */}

	{/* Date */}
	<p class="text-xs text-text-muted mb-2"> {/* Reduced margin */}
		Published: <time datetime={report.data.publishDate.toISOString()}>
			{report.data.publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}
		</time>
	</p>

	{/* Scores */}
	<div class="flex flex-col gap-0.5 text-xs mb-2"> {/* Reduced gap and margin */}
		<ScoreDisplay type="CVSS" score={report.data.cvssScore} />
		<ScoreDisplay type="EPSS" score={report.data.epssScore} />
	</div>

	{/* Tags Row */}
	<div class="flex flex-wrap gap-1 mb-2"> {/* Reduced margin */}
		{/* Use explicit severity if available, otherwise fallback to cvssSeverity */}
		{(report.data.severity || report.data.cvssSeverity) && <SeverityTag severity={report.data.severity || report.data.cvssSeverity} />}
		{report.data.isZeroDay && <ZeroDayTag isZeroDay={report.data.isZeroDay} />}
	</div>

	{/* Original Tags (smaller) */}
	{report.data.tags && report.data.tags.length > 0 && (
		<div class="text-xs mt-auto pt-2 border-t border-border/50"> {/* Push tags to bottom */}
			{report.data.tags.slice(0, 4).map(tag => ( // Limit tags shown further
				<span class="inline-block bg-secondary/10 text-secondary rounded px-1.5 py-0.5 mr-1 mb-1 text-[0.7rem]"> {/* Smaller tags */}
					#{tag}
				</span>
			))}
		</div>
	)}
</a>
