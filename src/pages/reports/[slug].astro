---
// src/pages/reports/[slug].astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SeverityTag from '../../components/SeverityTag.astro';
import ZeroDayTag from '../../components/ZeroDayTag.astro';
import ScoreDisplay from '../../components/ScoreDisplay.astro';

// Generate static pages for each report
export async function getStaticPaths() {
  const reportEntries = await getCollection('reports');
  return reportEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---
<BaseLayout title={entry.data.title} description={entry.data.description}>
	{/* Removed outer prose class, apply to content area */}
	<article>
		{/* Report Header */}
		<header class="mb-lg border-b border-border pb-md"> {/* Use spacing variables */}
			{/* CVE ID */}
			<h1 class="text-3xl md:text-4xl font-bold text-text mb-xs">{entry.data.cveId}</h1> {/* Use text color, responsive size */}
			{/* Report Title */}
			<h2 class="text-xl md:text-2xl font-semibold text-text-secondary mb-md">{entry.data.title}</h2> {/* Responsive size */}

			{/* Meta Info Row */}
			<div class="flex flex-wrap items-center gap-x-md gap-y-sm mb-md"> {/* Use spacing variables */}
				{/* Publish Date */}
				<div class="text-sm text-text-muted">
					Published: <time datetime={entry.data.publishDate.toISOString()}>
						{entry.data.publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
					</time>
				</div>
				{/* Severity & ZeroDay Tags */}
				<div class="flex items-center gap-sm"> {/* Use spacing variable */}
					{/* Use explicit severity if available, otherwise fallback to cvssSeverity */}
					{(entry.data.severity || entry.data.cvssSeverity) && <SeverityTag severity={entry.data.severity || entry.data.cvssSeverity} />}
					{entry.data.isZeroDay && <ZeroDayTag isZeroDay={entry.data.isZeroDay} />}
				</div>
			</div>

			{/* Scores Row */}
			<div class="flex flex-wrap items-center gap-x-md gap-y-xs mb-md"> {/* Use spacing variables */}
				<ScoreDisplay type="CVSS" score={entry.data.cvssScore} link={`https://nvd.nist.gov/vuln/detail/${entry.data.cveId}`} />
				<ScoreDisplay type="EPSS" score={entry.data.epssScore} link="https://www.first.org/epss/" />
				{/* Add CISA KEV status here if data becomes available */}
			</div>

			{/* Tags */}
			{entry.data.tags && entry.data.tags.length > 0 && (
				<div class="text-sm">
					{entry.data.tags.map(tag => {
						return (<span class="inline-block bg-secondary/10 text-secondary rounded px-2 py-0.5 mr-sm mb-sm text-xs">#{tag}</span>); {/* Use spacing variables */}
					})}
				</div>
			)}
		</header>

		{/* Report Content - Apply prose classes here */}
		<div class="prose prose-lg max-w-none dark:prose-invert mt-lg"> {/* Added margin-top */}
			<Content />
		</div>
	</article>
</BaseLayout>
